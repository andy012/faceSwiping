# 日志级别 OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL
log4j.rootLogger= error, console, logfile

# org.apache.log4j.ConsoleAppender（控制台）， 　　
# org.apache.log4j.FileAppender（文件）， 　　
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），　　
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）　　
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
# log4j.appender.console=org.apache.log4j.ConsoleAppender

# org.apache.log4j.HTMLLayout（以HTML表格形式布局）， 　　
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式）， 　　
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）， 　　
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
# log4j.appender.console.layout=org.apache.log4j.PatternLayout

# 如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：　　
# %m 输出代码中指定的消息　　
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 　　
# %r 输出自应用启动到输出该log信息耗费的毫秒数 　　
# %c 输出所属的类目，通常就是所在类的全名 　　
# %t 输出产生该日志事件的线程名 　　
# %n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n” 　　⇒  ls，以及在代码中的行数。　　
# [QC]是log信息的开头，可以为任意字符，一般为项目简称。　　
# 输出的信息　　[TS] DEBUG [main] AbstractBeanFactory.getBean(189) | Returning cached instance of singleton bean 'MyAutoProxy'
# log4j.appender.console.layout.ConversionPattern=%d %p [%c] - %m%n

# 打印到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 日志布局
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 日志打印格式
log4j.appender.console.layout.ConversionPattern=%d %p [%c] - %m%n

# 每天生成一个文件
log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
# 日志布局
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
# 日志目录 ${catalina.home} Tomcat服务器根目录
#log4j.appender.logfile.File=${catalina.home}/logs/faceSwiping.log

log4j.appender.logfile.File=logs/faceSwiping.log
# 日志打印格式
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n
# 日志文件最大值，达到最大值则新建文件
# log4j.appender.logfile.maxFileSize=5120KB
# 最大文件数量
# log4j.appender.logfile.maxBackupIndex=15





# 指定第三方包下类的日志等级为debug
# log4j.logger.javax=debug
# log4j.logger.org.aopalliance=debug
# log4j.logger.com.google.gson=debug
# log4j.logger.com.mysql.jdbc=debug
# log4j.logger.com.fasterxml.jackson.core=debug
# log4j.logger.com.fasterxml.jackson.databind=debug
# log4j.logger.com.fasterxml.jackson.annotation=debug
# log4j.logger.org.apache.commons=debug
# log4j.logger.org.apache.commons.io=debug
# log4j.logger.org.apache.commons.lang=debug
# log4j.logger.org.apache.commons.fileupload=debug
# log4j.logger.org.springframework=debug
# log4j.logger.org.springframework.aop=debug
# log4j.logger.org.springframework.orm=debug
# log4j.logger.org.springframework.oxm=debug
# log4j.logger.org.springframework.jdbc.core=debug
# log4j.logger.org.springframework.beans.factory.support.DefaultListableBeanFactory=debug
# log4j.logger.org.springframework.messaging=debug
# log4j.logger.org.springframework.expression=debug
# log4j.logger.org.springframework.instrument=debug
# log4j.logger.org.springframework.web.socket=debug
# log4j.logger.org.springframework.web.servlet=debug
# log4j.logger.org.springframework.web.portlet=debug
# log4j.logger.org.springframework.instrument.classloading=debug


